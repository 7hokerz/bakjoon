#include <stdio.h>  

int gcd(int a, int b){//a가 큰 값, b가 작은 값
    if(a % b == 0){//a%b = 0이면 b가 최대 공약수가 됨.
        return b;
    }else{//나머지가 존재하면 그 나머지를 가지고 다시 재귀
        return gcd(b, a%b);
    }
}

int calc(int a, int b){
    int x, GCD;
    while(a != 1){//a가 1이 나올 경우 더 진행할 필요가 없으므로 종료하는 것이다.
        x = (b%a == 0)?(b/a):(b/a+1);//둘이 배수관계면 어차피 1/n꼴이 되기 때문이다. 그렇지 않은 경우는 조건을 만족하는 x를 넣어준다.

        a = a*x-b;//a에는 분자값이 들어간다. a*x - 1*b인데 1은 생략해도 됨.

        b = b*x;//b에는 공통분모가 들어감.
        //a와 b는 b/a - 1/x의 값이 들어간다.

        GCD = gcd(a, b); //새로운 최대 공약수(분모가 될 수 있는 값)을 찾는다.
        a /= GCD; b /= GCD;//약분이 되지 않을 경우 값이 이상해지므로 약분
    }
    return b;//최댓값 b 반환
}

int main() {   
    int T, a, b;
    scanf("%d", &T);
    for(int i = 0;i<T;i++){
        scanf("%d %d", &a, &b);
        printf("%d\n", calc(a, b));
    }
}
/*
a/b >= 1/x를 만족하는 가장 큰 x를 구하려면?
x >= b/a로 바꿀 수 있다.

5/7 >= 1/x를 예로 들면, x >= 7/5이고 이를 만족하는 가장 작은 정수는? 2가 된다.
(여기서? 7/5+1 = 2.4인데, int형이므로 소수점은 버려지고 2가 된다는 것이다.)
즉, 조건을 만족하는 x = b/a + 1이 되는 것이다!

5/7 - 1/2
10/14 - 7/14

GCD에 대하여
임의의 두 자연수 a, b가 주어졌을때. 
둘중 큰 값이 a라고 가정

a를 b로 나눈 나머지를 n 이라고 하면 (a%b = n) n이 0일때, b가 최대 공약수(GCD).

만약 n이 0이 아니라면, a에 b값을 다시 넣고 n를 b에 대입 한 후 다시 위에 step2부터 반복하면 됨.
*/